---
- name: Prepare Assets
  hosts: localhost
  gather_facts: true
  vars_files:
    - runai_vars.yaml
  become: no
  tasks:
    - name: Create StorageClass on K8s
      k8s:
        definition:
          apiVersion: storage.k8s.io/v1
          kind: StorageClass
          metadata:
            name: nfs-csi
            annotations:
              storageclass.kubernetes.io/is-default-class: "true"
          provisioner: nfs.csi.k8s.io
          parameters:
            server: jump.runai.local
            share: /data/runai-storage
          reclaimPolicy: Delete
          volumeBindingMode: Immediate
          mountOptions:
            - nfsvers=4.1

    - name: Install NFS CSI Driver 4.4.0
      shell: |
        export KUBECONFIG={{ kubeconfig_path }}
        curl -skSL https://raw.githubusercontent.com/kubernetes-csi/csi-driver-nfs/v4.4.0/deploy/install-driver.sh | bash -s v4.4.0 --
      args:
        executable: /bin/bash

    - name: Check if Prometheus is installed
      shell: |
        export KUBECONFIG={{ kubeconfig_path }} && \
        helm list -n monitoring | grep prometheus
      register: prometheus_check
      failed_when: false  # prevent task from failing if grep finds nothing
      args:
        executable: /bin/bash

    - name: Execute installation script
      shell: |
        export KUBECONFIG={{ kubeconfig_path }} && \
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts && \
        helm repo update && \
        helm install prometheus prometheus-community/kube-prometheus-stack -n monitoring --create-namespace --set grafana.enabled=false  
      when: prometheus_check.stdout == ""
      args:
        executable: /bin/bash
