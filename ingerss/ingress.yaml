apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: proxy_set_header Authorization
      $http_authorization;
    nginx.ingress.kubernetes.io/cors-allow-headers: Authorization, content-type
    nginx.ingress.kubernetes.io/enable-cors: "true"
  creationTimestamp: "2022-11-09T16:11:00Z"
  generation: 1
  labels:
    app: researcher-service
  name: researcher-service-ingress
  namespace: runai
  ownerReferences:
  - apiVersion: run.ai/v1
    blockOwnerDeletion: true
    controller: true
    kind: RunaiConfig
    name: runai
    uid: 71d3aed6-203a-40be-83c9-ae34ec71dac3
  resourceVersion: "24685428"
  uid: 7fd01c19-9b82-42b1-81b5-b4ef48bbfe61
spec:
  tls:
    - hosts:
       - nvidia-cloud.runai-poc.com
      secretName: runai-poc.com
  rules:
  - host: nvidia-cloud.runai-poc.com
    http:
      paths:
      - backend:
          service:
            name: researcher-service
            port:
              number: 4180
        path: /
        pathType: Prefix
      - backend:
          service:
            name: researcher-service
            port:
              number: 4180
        path: /oauth2
        pathType: Prefix
status:
  loadBalancer:
    ingress:
    - hostname: a4b0ac0e619744e9680f59aafae3bfdf-89075358.us-east-1.elb.amazonaws.com
